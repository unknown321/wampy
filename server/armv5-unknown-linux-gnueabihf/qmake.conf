include(../common/linux_device_pre.conf)

QT_QPA_DEFAULT_PLATFORM = eglfs

QMAKE_LFLAGS           += -Wl,-rpath-link,$$[QT_SYSROOT]/opt/vc/lib

QMAKE_LIBDIR_EGL        = $$QMAKE_LIBDIR_OPENGL_ES2

QMAKE_LIBS_EGL          = -lEGL -lGLESv2 $(EGL_LIB) $(SECOND_PASS_CFLAGS)

contains(DISTRO, squeeze) {
    #Debian Squeeze: Legacy everything
    QMAKE_LIBS_OPENGL_ES2   = -lGLESv2 -lEGL
    QT_QPA_DEFAULT_PLATFORM = eglfs
} else:contains(DISTRO, arch) {
    #On principle: no wizardry required
} else {
    #This is not strictly necessary
    DISTRO_OPTS += deb-multi-arch
    DISTRO_OPTS += hard-float
}

QMAKE_CFLAGS           += \
                          -mthumb \
                          -mcpu=cortex-a7 \
                          -mtune=cortex-a7 \
                          -mfpu=neon-vfpv4 \
                          -mthumb-interwork \
                          -mfloat-abi=hard \
                          -mtls-dialect=gnu \
                          -frecord-gcc-switches \
                          -fno-reorder-blocks-and-partition \
                          -fstack-protector-strong \
                          -fno-omit-frame-pointer \
                          -fexceptions \
                          -fPIC \
                          -I/libs \
                          -I/libs/KHR \
                          -I/qt/qtbase/include/QtWidgets/ \
                          -I/qt/qtdeclarative/include/QtQml \
                          -I/qt/qtdeclarative/include/QtQuick \
                          -I/qt/qtdeclarative/include/ \
                          -I/protobuf/build-armv5/include/ \
                          -g \
                           $(SECOND_PASS_CFLAGS)

QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS
QMAKE_CXXFLAGS_EXCEPTIONS_OFF = ""
QMAKE_CFLAGS_EXCEPTIONS_OFF = ""


SECOND_PASS = $$(SECOND_PASS_CFLAGS)

contains(SECOND_PASS, .*1.*) {
    EGLFS_PLATFORM_HOOKS_SOURCES =  $$PWD/command.pb.cc $$PWD/command_names.cpp $$PWD/wampy.cpp $$PWD/helpers.cpp $$PWD/Controller.cpp $$PWD/Provider.cpp  $$PWD/server.cpp $$PWD/qeglfshooks_mt8590.cpp
} else {
    EGLFS_PLATFORM_HOOKS_SOURCES =  $$PWD/qeglfshooks_mt8590.cpp
}

load(qt_config)
