#include "QAbstractItemModel"
#include <QObject>
#include <QQmlContext>
#include <QQuickItem>
#include <QWindow>

#include "hagoromoStatus.h"

#define HAGOROMO_DEFAULT_VOLUME_MAX 120
#define HAGOROMO_AVLS_VOLUME_MAX 63

typedef int PlayState;

// Provider updates and keeps following data:
// play status, volume, playlist, current track details, usb mass storage status
// basically everything user actually wants
class Provider : public QObject {
    Q_OBJECT

  private:
    QQuickItem *gridArea = nullptr;

    static void updatePlaylist(QObject *trackSequenceView);

    void notifyUpdate() const;

  public:
    Provider();

    HagoromoStatus *status = nullptr;
    int maxVolume = HAGOROMO_DEFAULT_VOLUME_MAX;
    bool usbMounted{};

    QObject *MusicPlayerDefaultModel{};

    void Start();

    void GetPlaylist();

    void FromMSC(QObject *MSC);

    void FromDAC(QObject *o) const;

  public slots:

    void VolumeSlot();

    void CurrentPlayState(PlayState play_state) const;

    void MSCSlot();

    void UpdateElapsed();

    void UpdateBasicControls();

    void UpdateEntryID();
};